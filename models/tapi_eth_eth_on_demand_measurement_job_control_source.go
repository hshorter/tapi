// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiEthEthOnDemandMeasurementJobControlSource tapi eth eth on demand measurement job control source
// swagger:model tapi.eth.EthOnDemandMeasurementJobControlSource
type TapiEthEthOnDemandMeasurementJobControlSource struct {

	// none
	ControllerMepID string `json:"controller-mep-id,omitempty"`

	// This parameter provides the size of the optional data TLV.
	//                     Non-negative integer represents the number of bytes for the length of the padding TLV.
	//                     Notes:
	//                     When configuring this parameter one should be aware of the maximum allowed total frame size limitation.
	//                     The attribute is not used in case of 2-way loss measurement.
	//                     range of type : Depends on the allowed MTU size.
	DataTlvLength int32 `json:"data-tlv-length,omitempty"`

	// This attribute contains the MAC address of the peer MEP. See G.8013 for details.
	DestinationAddress string `json:"destination-address,omitempty"`

	// This attribute contains the discrete non overlapping periods of time (in seconds) during which measurements are performed (i.e., OAM messages are generated) and reports are gathered at the end of the measurement intervals. Note that the value 0 means a degenerated measurement interval with a single OAM message and the report is sent as immediately as possible.
	//                     range of type : Non-negative
	MeasurementInterval int32 `json:"measurement-interval,omitempty"`

	// This attribute contains the frequency of the OAM message (PDU) generation within a series.
	//                     Note that the value 0 means that only one OAM message per measurement interval is generated.
	//                     range of type : See corresponding Enum.
	MessagePeriod TapiEthMessagePeriod `json:"message-period,omitempty"`

	// This attribute contains the pattern that is used for the generation of OAM PDUs.
	OamPduGenerationType TapiEthOamPduGenerationType `json:"oam-pdu-generation-type,omitempty"`

	// This attribute contains the priority of the OAM PDU frames.
	//                     range of type : 0, 1, 2, 3, 4, 5, 6, 7
	Priority *int32 `json:"priority,omitempty"`

	// This attribute contains the time between the start of two measurement intervals. This IS applicable for the repetitive instance type and MAY be applicable for the repetitive series type.
	//                     Note that a value of 0 means not applicable (NA), which is for the cases of single instance, single series, or repetitive series without extra gap in between the measurement intervals (i.e., also as known as continuous series).
	RepetitionPeriod TapiEthRepetitionPeriod `json:"repetition-period,omitempty"`

	// This attribute is used to distinguish each measurement session if multiple measurement sessions are simultaneously activated towards a peer MEP including concurrent on-demand and proactive tests. It must be unique at least within the context of any measurement type for the MEG and initiating MEP.
	//                     Note: The attribute is not used in case of LMM/LMR measurement.
	//                     range of type : 0..(2^32) - 1
	TestIdentifier int32 `json:"test-identifier,omitempty"`
}

// Validate validates this tapi eth eth on demand measurement job control source
func (m *TapiEthEthOnDemandMeasurementJobControlSource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMessagePeriod(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOamPduGenerationType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRepetitionPeriod(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiEthEthOnDemandMeasurementJobControlSource) validateMessagePeriod(formats strfmt.Registry) error {

	if swag.IsZero(m.MessagePeriod) { // not required
		return nil
	}

	if err := m.MessagePeriod.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("message-period")
		}
		return err
	}

	return nil
}

func (m *TapiEthEthOnDemandMeasurementJobControlSource) validateOamPduGenerationType(formats strfmt.Registry) error {

	if swag.IsZero(m.OamPduGenerationType) { // not required
		return nil
	}

	if err := m.OamPduGenerationType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("oam-pdu-generation-type")
		}
		return err
	}

	return nil
}

func (m *TapiEthEthOnDemandMeasurementJobControlSource) validateRepetitionPeriod(formats strfmt.Registry) error {

	if swag.IsZero(m.RepetitionPeriod) { // not required
		return nil
	}

	if err := m.RepetitionPeriod.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("repetition-period")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiEthEthOnDemandMeasurementJobControlSource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiEthEthOnDemandMeasurementJobControlSource) UnmarshalBinary(b []byte) error {
	var res TapiEthEthOnDemandMeasurementJobControlSource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
