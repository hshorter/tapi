// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiOamContextOamContext tapi oam context oam context
// swagger:model tapi.oam.context.OamContext
type TapiOamContextOamContext struct {

	// none
	Meg []*TapiOamOamcontextMeg `json:"meg"`

	// none
	OamJob []*TapiOamOamcontextOamJob `json:"oam-job"`

	// none
	OamProfile []*TapiOamOamcontextOamProfile `json:"oam-profile"`

	// none
	OamService []*TapiOamOamService `json:"oam-service"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *TapiOamContextOamContext) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		Meg []*TapiOamOamcontextMeg `json:"meg"`

		OamJob []*TapiOamOamcontextOamJob `json:"oam-job"`

		OamProfile []*TapiOamOamcontextOamProfile `json:"oam-profile"`

		OamService []*TapiOamOamService `json:"oam-service"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	m.Meg = dataAO0.Meg

	m.OamJob = dataAO0.OamJob

	m.OamProfile = dataAO0.OamProfile

	m.OamService = dataAO0.OamService

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m TapiOamContextOamContext) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	var dataAO0 struct {
		Meg []*TapiOamOamcontextMeg `json:"meg"`

		OamJob []*TapiOamOamcontextOamJob `json:"oam-job"`

		OamProfile []*TapiOamOamcontextOamProfile `json:"oam-profile"`

		OamService []*TapiOamOamService `json:"oam-service"`
	}

	dataAO0.Meg = m.Meg

	dataAO0.OamJob = m.OamJob

	dataAO0.OamProfile = m.OamProfile

	dataAO0.OamService = m.OamService

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this tapi oam context oam context
func (m *TapiOamContextOamContext) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMeg(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOamJob(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOamProfile(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOamService(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiOamContextOamContext) validateMeg(formats strfmt.Registry) error {

	if swag.IsZero(m.Meg) { // not required
		return nil
	}

	for i := 0; i < len(m.Meg); i++ {
		if swag.IsZero(m.Meg[i]) { // not required
			continue
		}

		if m.Meg[i] != nil {
			if err := m.Meg[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("meg" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *TapiOamContextOamContext) validateOamJob(formats strfmt.Registry) error {

	if swag.IsZero(m.OamJob) { // not required
		return nil
	}

	for i := 0; i < len(m.OamJob); i++ {
		if swag.IsZero(m.OamJob[i]) { // not required
			continue
		}

		if m.OamJob[i] != nil {
			if err := m.OamJob[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("oam-job" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *TapiOamContextOamContext) validateOamProfile(formats strfmt.Registry) error {

	if swag.IsZero(m.OamProfile) { // not required
		return nil
	}

	for i := 0; i < len(m.OamProfile); i++ {
		if swag.IsZero(m.OamProfile[i]) { // not required
			continue
		}

		if m.OamProfile[i] != nil {
			if err := m.OamProfile[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("oam-profile" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *TapiOamContextOamContext) validateOamService(formats strfmt.Registry) error {

	if swag.IsZero(m.OamService) { // not required
		return nil
	}

	for i := 0; i < len(m.OamService); i++ {
		if swag.IsZero(m.OamService[i]) { // not required
			continue
		}

		if m.OamService[i] != nil {
			if err := m.OamService[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("oam-service" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiOamContextOamContext) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiOamContextOamContext) UnmarshalBinary(b []byte) error {
	var res TapiOamContextOamContext
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
