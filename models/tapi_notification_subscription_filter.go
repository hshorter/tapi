// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiNotificationSubscriptionFilter tapi notification subscription filter
// swagger:model tapi.notification.SubscriptionFilter
type TapiNotificationSubscriptionFilter struct {
	TapiCommonLocalClass

	// Indicates whether the published Notification includes content or just the Notification Id (which enables retrieval of the notification at the later stage)
	IncludeContent *bool `json:"include-content,omitempty"`

	// none
	RequestedLayerProtocols []TapiCommonLayerProtocolName `json:"requested-layer-protocols"`

	// none
	RequestedNotificationTypes []TapiNotificationNotificationType `json:"requested-notification-types"`

	// none
	RequestedObjectIdentifier []string `json:"requested-object-identifier"`

	// none
	RequestedObjectTypes []TapiNotificationObjectType `json:"requested-object-types"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *TapiNotificationSubscriptionFilter) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 TapiCommonLocalClass
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.TapiCommonLocalClass = aO0

	// AO1
	var dataAO1 struct {
		IncludeContent *bool `json:"include-content,omitempty"`

		RequestedLayerProtocols []TapiCommonLayerProtocolName `json:"requested-layer-protocols"`

		RequestedNotificationTypes []TapiNotificationNotificationType `json:"requested-notification-types"`

		RequestedObjectIdentifier []string `json:"requested-object-identifier"`

		RequestedObjectTypes []TapiNotificationObjectType `json:"requested-object-types"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.IncludeContent = dataAO1.IncludeContent

	m.RequestedLayerProtocols = dataAO1.RequestedLayerProtocols

	m.RequestedNotificationTypes = dataAO1.RequestedNotificationTypes

	m.RequestedObjectIdentifier = dataAO1.RequestedObjectIdentifier

	m.RequestedObjectTypes = dataAO1.RequestedObjectTypes

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m TapiNotificationSubscriptionFilter) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.TapiCommonLocalClass)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	var dataAO1 struct {
		IncludeContent *bool `json:"include-content,omitempty"`

		RequestedLayerProtocols []TapiCommonLayerProtocolName `json:"requested-layer-protocols"`

		RequestedNotificationTypes []TapiNotificationNotificationType `json:"requested-notification-types"`

		RequestedObjectIdentifier []string `json:"requested-object-identifier"`

		RequestedObjectTypes []TapiNotificationObjectType `json:"requested-object-types"`
	}

	dataAO1.IncludeContent = m.IncludeContent

	dataAO1.RequestedLayerProtocols = m.RequestedLayerProtocols

	dataAO1.RequestedNotificationTypes = m.RequestedNotificationTypes

	dataAO1.RequestedObjectIdentifier = m.RequestedObjectIdentifier

	dataAO1.RequestedObjectTypes = m.RequestedObjectTypes

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this tapi notification subscription filter
func (m *TapiNotificationSubscriptionFilter) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with TapiCommonLocalClass
	if err := m.TapiCommonLocalClass.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRequestedLayerProtocols(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRequestedNotificationTypes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRequestedObjectTypes(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiNotificationSubscriptionFilter) validateRequestedLayerProtocols(formats strfmt.Registry) error {

	if swag.IsZero(m.RequestedLayerProtocols) { // not required
		return nil
	}

	for i := 0; i < len(m.RequestedLayerProtocols); i++ {

		if err := m.RequestedLayerProtocols[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("requested-layer-protocols" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *TapiNotificationSubscriptionFilter) validateRequestedNotificationTypes(formats strfmt.Registry) error {

	if swag.IsZero(m.RequestedNotificationTypes) { // not required
		return nil
	}

	for i := 0; i < len(m.RequestedNotificationTypes); i++ {

		if err := m.RequestedNotificationTypes[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("requested-notification-types" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *TapiNotificationSubscriptionFilter) validateRequestedObjectTypes(formats strfmt.Registry) error {

	if swag.IsZero(m.RequestedObjectTypes) { // not required
		return nil
	}

	for i := 0; i < len(m.RequestedObjectTypes); i++ {

		if err := m.RequestedObjectTypes[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("requested-object-types" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiNotificationSubscriptionFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiNotificationSubscriptionFilter) UnmarshalBinary(b []byte) error {
	var res TapiNotificationSubscriptionFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
