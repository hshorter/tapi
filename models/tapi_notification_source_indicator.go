// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// TapiNotificationSourceIndicator tapi notification source indicator
// swagger:model tapi.notification.SourceIndicator
type TapiNotificationSourceIndicator string

const (

	// TapiNotificationSourceIndicatorRESOURCEOPERATION captures enum value "RESOURCE_OPERATION"
	TapiNotificationSourceIndicatorRESOURCEOPERATION TapiNotificationSourceIndicator = "RESOURCE_OPERATION"

	// TapiNotificationSourceIndicatorMANAGEMENTOPERATION captures enum value "MANAGEMENT_OPERATION"
	TapiNotificationSourceIndicatorMANAGEMENTOPERATION TapiNotificationSourceIndicator = "MANAGEMENT_OPERATION"

	// TapiNotificationSourceIndicatorUNKNOWN captures enum value "UNKNOWN"
	TapiNotificationSourceIndicatorUNKNOWN TapiNotificationSourceIndicator = "UNKNOWN"
)

// for schema
var tapiNotificationSourceIndicatorEnum []interface{}

func init() {
	var res []TapiNotificationSourceIndicator
	if err := json.Unmarshal([]byte(`["RESOURCE_OPERATION","MANAGEMENT_OPERATION","UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tapiNotificationSourceIndicatorEnum = append(tapiNotificationSourceIndicatorEnum, v)
	}
}

func (m TapiNotificationSourceIndicator) validateTapiNotificationSourceIndicatorEnum(path, location string, value TapiNotificationSourceIndicator) error {
	if err := validate.Enum(path, location, value, tapiNotificationSourceIndicatorEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this tapi notification source indicator
func (m TapiNotificationSourceIndicator) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTapiNotificationSourceIndicatorEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
