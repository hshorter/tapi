// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiNotificationTcaInfo tapi notification tca info
// swagger:model tapi.notification.TcaInfo
type TapiNotificationTcaInfo struct {

	// none
	IsTransient *bool `json:"is-transient,omitempty"`

	// none
	MeasurementInterval string `json:"measurement-interval,omitempty"`

	// none
	PerceivedSeverity TapiNotificationPerceivedTcaSeverity `json:"perceived-severity,omitempty"`

	// none
	SuspectIntervalFlag *bool `json:"suspect-interval-flag,omitempty"`

	// none
	ThresholdCrossing TapiNotificationThresholdCrossingType `json:"threshold-crossing,omitempty"`

	// none
	ThresholdParameter string `json:"threshold-parameter,omitempty"`

	// none
	ThresholdValue int32 `json:"threshold-value,omitempty"`
}

// Validate validates this tapi notification tca info
func (m *TapiNotificationTcaInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePerceivedSeverity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateThresholdCrossing(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiNotificationTcaInfo) validatePerceivedSeverity(formats strfmt.Registry) error {

	if swag.IsZero(m.PerceivedSeverity) { // not required
		return nil
	}

	if err := m.PerceivedSeverity.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("perceived-severity")
		}
		return err
	}

	return nil
}

func (m *TapiNotificationTcaInfo) validateThresholdCrossing(formats strfmt.Registry) error {

	if swag.IsZero(m.ThresholdCrossing) { // not required
		return nil
	}

	if err := m.ThresholdCrossing.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("threshold-crossing")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiNotificationTcaInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiNotificationTcaInfo) UnmarshalBinary(b []byte) error {
	var res TapiNotificationTcaInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
