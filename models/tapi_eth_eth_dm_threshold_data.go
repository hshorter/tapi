// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiEthEthDmThresholdData tapi eth eth dm threshold data
// swagger:model tapi.eth.EthDmThresholdData
type TapiEthEthDmThresholdData struct {

	// This attribute contains the bidirectional clear threshold values of the delay measurements.
	BiDirDmClearThreshold *TapiEthStatisticalDmPerformanceParameters `json:"bi-dir-dm-clear-threshold,omitempty"`

	// This attribute contains the bidirectional cross threshold values of the delay measurements.
	BiDirDmCrossThreshold *TapiEthStatisticalDmPerformanceParameters `json:"bi-dir-dm-cross-threshold,omitempty"`

	// This attribute contains the far end clear threshold values of the delay measurements.
	FarEndDmClearThreshold *TapiEthStatisticalDmPerformanceParameters `json:"far-end-dm-clear-threshold,omitempty"`

	// This attribute contains the far end cross threshold values of the delay measurements.
	FarEndDmCrossThreshold *TapiEthStatisticalDmPerformanceParameters `json:"far-end-dm-cross-threshold,omitempty"`

	// This attribute contains the near end clear threshold values of the delay measurements.
	NearEndDmClearThreshold *TapiEthStatisticalDmPerformanceParameters `json:"near-end-dm-clear-threshold,omitempty"`

	// This attribute contains the near end cross threshold values of the delay measurements.
	NearEndDmCrossThreshold *TapiEthStatisticalDmPerformanceParameters `json:"near-end-dm-cross-threshold,omitempty"`
}

// Validate validates this tapi eth eth dm threshold data
func (m *TapiEthEthDmThresholdData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBiDirDmClearThreshold(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBiDirDmCrossThreshold(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFarEndDmClearThreshold(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFarEndDmCrossThreshold(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNearEndDmClearThreshold(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNearEndDmCrossThreshold(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiEthEthDmThresholdData) validateBiDirDmClearThreshold(formats strfmt.Registry) error {

	if swag.IsZero(m.BiDirDmClearThreshold) { // not required
		return nil
	}

	if m.BiDirDmClearThreshold != nil {
		if err := m.BiDirDmClearThreshold.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("bi-dir-dm-clear-threshold")
			}
			return err
		}
	}

	return nil
}

func (m *TapiEthEthDmThresholdData) validateBiDirDmCrossThreshold(formats strfmt.Registry) error {

	if swag.IsZero(m.BiDirDmCrossThreshold) { // not required
		return nil
	}

	if m.BiDirDmCrossThreshold != nil {
		if err := m.BiDirDmCrossThreshold.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("bi-dir-dm-cross-threshold")
			}
			return err
		}
	}

	return nil
}

func (m *TapiEthEthDmThresholdData) validateFarEndDmClearThreshold(formats strfmt.Registry) error {

	if swag.IsZero(m.FarEndDmClearThreshold) { // not required
		return nil
	}

	if m.FarEndDmClearThreshold != nil {
		if err := m.FarEndDmClearThreshold.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("far-end-dm-clear-threshold")
			}
			return err
		}
	}

	return nil
}

func (m *TapiEthEthDmThresholdData) validateFarEndDmCrossThreshold(formats strfmt.Registry) error {

	if swag.IsZero(m.FarEndDmCrossThreshold) { // not required
		return nil
	}

	if m.FarEndDmCrossThreshold != nil {
		if err := m.FarEndDmCrossThreshold.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("far-end-dm-cross-threshold")
			}
			return err
		}
	}

	return nil
}

func (m *TapiEthEthDmThresholdData) validateNearEndDmClearThreshold(formats strfmt.Registry) error {

	if swag.IsZero(m.NearEndDmClearThreshold) { // not required
		return nil
	}

	if m.NearEndDmClearThreshold != nil {
		if err := m.NearEndDmClearThreshold.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("near-end-dm-clear-threshold")
			}
			return err
		}
	}

	return nil
}

func (m *TapiEthEthDmThresholdData) validateNearEndDmCrossThreshold(formats strfmt.Registry) error {

	if swag.IsZero(m.NearEndDmCrossThreshold) { // not required
		return nil
	}

	if m.NearEndDmCrossThreshold != nil {
		if err := m.NearEndDmCrossThreshold.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("near-end-dm-cross-threshold")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiEthEthDmThresholdData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiEthEthDmThresholdData) UnmarshalBinary(b []byte) error {
	var res TapiEthEthDmThresholdData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
