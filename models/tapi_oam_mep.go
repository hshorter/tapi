// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiOamMep tapi oam mep
// swagger:model tapi.oam.Mep
type TapiOamMep struct {
	TapiCommonLocalClass

	TapiCommonOperationalStatePac

	// none
	Direction TapiCommonTerminationDirection `json:"direction,omitempty"`

	// none
	LayerProtocolName TapiCommonLayerProtocolName `json:"layer-protocol-name,omitempty"`

	// none
	MepIdentifier string `json:"mep-identifier,omitempty"`

	// none
	PeerMepIdentifier []string `json:"peer-mep-identifier"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *TapiOamMep) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 TapiCommonLocalClass
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.TapiCommonLocalClass = aO0

	// AO1
	var aO1 TapiCommonOperationalStatePac
	if err := swag.ReadJSON(raw, &aO1); err != nil {
		return err
	}
	m.TapiCommonOperationalStatePac = aO1

	// AO2
	var dataAO2 struct {
		Direction TapiCommonTerminationDirection `json:"direction,omitempty"`

		LayerProtocolName TapiCommonLayerProtocolName `json:"layer-protocol-name,omitempty"`

		MepIdentifier string `json:"mep-identifier,omitempty"`

		PeerMepIdentifier []string `json:"peer-mep-identifier"`
	}
	if err := swag.ReadJSON(raw, &dataAO2); err != nil {
		return err
	}

	m.Direction = dataAO2.Direction

	m.LayerProtocolName = dataAO2.LayerProtocolName

	m.MepIdentifier = dataAO2.MepIdentifier

	m.PeerMepIdentifier = dataAO2.PeerMepIdentifier

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m TapiOamMep) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 3)

	aO0, err := swag.WriteJSON(m.TapiCommonLocalClass)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	aO1, err := swag.WriteJSON(m.TapiCommonOperationalStatePac)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO1)

	var dataAO2 struct {
		Direction TapiCommonTerminationDirection `json:"direction,omitempty"`

		LayerProtocolName TapiCommonLayerProtocolName `json:"layer-protocol-name,omitempty"`

		MepIdentifier string `json:"mep-identifier,omitempty"`

		PeerMepIdentifier []string `json:"peer-mep-identifier"`
	}

	dataAO2.Direction = m.Direction

	dataAO2.LayerProtocolName = m.LayerProtocolName

	dataAO2.MepIdentifier = m.MepIdentifier

	dataAO2.PeerMepIdentifier = m.PeerMepIdentifier

	jsonDataAO2, errAO2 := swag.WriteJSON(dataAO2)
	if errAO2 != nil {
		return nil, errAO2
	}
	_parts = append(_parts, jsonDataAO2)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this tapi oam mep
func (m *TapiOamMep) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with TapiCommonLocalClass
	if err := m.TapiCommonLocalClass.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with TapiCommonOperationalStatePac
	if err := m.TapiCommonOperationalStatePac.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDirection(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLayerProtocolName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiOamMep) validateDirection(formats strfmt.Registry) error {

	if swag.IsZero(m.Direction) { // not required
		return nil
	}

	if err := m.Direction.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("direction")
		}
		return err
	}

	return nil
}

func (m *TapiOamMep) validateLayerProtocolName(formats strfmt.Registry) error {

	if swag.IsZero(m.LayerProtocolName) { // not required
		return nil
	}

	if err := m.LayerProtocolName.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("layer-protocol-name")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiOamMep) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiOamMep) UnmarshalBinary(b []byte) error {
	var res TapiOamMep
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
