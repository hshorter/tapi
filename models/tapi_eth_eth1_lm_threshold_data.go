// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiEthEth1LmThresholdData tapi eth eth1 lm threshold data
// swagger:model tapi.eth.Eth1LmThresholdData
type TapiEthEth1LmThresholdData struct {

	// This attribute is only valid for frame loss ratio parameters and counter type parameters working in the 'standing condition method' (see G.7710, section 10.1.7.2: Threshold reporting) and contains the near end clear threshold values of the loss measurements.
	NearEnd1LmClearThreshold *TapiEthStatisticalLmPerformanceParameters `json:"near-end-1-lm-clear-threshold,omitempty"`

	// This attribute contains the near end cross threshold values of the loss measurements.
	NearEnd1LmCrossThreshold *TapiEthStatisticalLmPerformanceParameters `json:"near-end-1-lm-cross-threshold,omitempty"`
}

// Validate validates this tapi eth eth1 lm threshold data
func (m *TapiEthEth1LmThresholdData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNearEnd1LmClearThreshold(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNearEnd1LmCrossThreshold(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiEthEth1LmThresholdData) validateNearEnd1LmClearThreshold(formats strfmt.Registry) error {

	if swag.IsZero(m.NearEnd1LmClearThreshold) { // not required
		return nil
	}

	if m.NearEnd1LmClearThreshold != nil {
		if err := m.NearEnd1LmClearThreshold.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("near-end-1-lm-clear-threshold")
			}
			return err
		}
	}

	return nil
}

func (m *TapiEthEth1LmThresholdData) validateNearEnd1LmCrossThreshold(formats strfmt.Registry) error {

	if swag.IsZero(m.NearEnd1LmCrossThreshold) { // not required
		return nil
	}

	if m.NearEnd1LmCrossThreshold != nil {
		if err := m.NearEnd1LmCrossThreshold.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("near-end-1-lm-cross-threshold")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiEthEth1LmThresholdData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiEthEth1LmThresholdData) UnmarshalBinary(b []byte) error {
	var res TapiEthEth1LmThresholdData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
