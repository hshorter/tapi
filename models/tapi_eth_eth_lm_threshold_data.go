// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiEthEthLmThresholdData tapi eth eth lm threshold data
// swagger:model tapi.eth.EthLmThresholdData
type TapiEthEthLmThresholdData struct {

	// This attribute is only valid for the UAS parameter working in the 'standing condition method' (see G.7710, section 10.1.7.2: Threshold reporting) and contains the bidirectional clear threshold value of the UAS loss measurement.
	BiDirLmUasClearThreshold int32 `json:"bi-dir-lm-uas-clear-threshold,omitempty"`

	// This attribute contains the bidirectional cross threshold value of the UAS loss measurement.
	BiDirLmUasCrossThreshold int32 `json:"bi-dir-lm-uas-cross-threshold,omitempty"`

	// This attribute is only valid for frame loss ratio parameters and counter type parameters working in the 'standing condition method' (see G.7710, section 10.1.7.2: Threshold reporting) and contains the far end clear threshold values of the loss measurements.
	FarEndLmClearThreshold *TapiEthStatisticalLmPerformanceParameters `json:"far-end-lm-clear-threshold,omitempty"`

	// This attribute contains the far end cross threshold values of the loss measurements.
	FarEndLmCrossThreshold *TapiEthStatisticalLmPerformanceParameters `json:"far-end-lm-cross-threshold,omitempty"`

	// This attribute is only valid for frame loss ratio parameters and counter type parameters working in the 'standing condition method' (see G.7710, section 10.1.7.2: Threshold reporting) and contains the near end clear threshold values of the loss measurements.
	NearEndLmClearThreshold *TapiEthStatisticalLmPerformanceParameters `json:"near-end-lm-clear-threshold,omitempty"`

	// This attribute contains the near end cross threshold values of the loss measurements.
	NearEndLmCrossThreshold *TapiEthStatisticalLmPerformanceParameters `json:"near-end-lm-cross-threshold,omitempty"`
}

// Validate validates this tapi eth eth lm threshold data
func (m *TapiEthEthLmThresholdData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFarEndLmClearThreshold(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFarEndLmCrossThreshold(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNearEndLmClearThreshold(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNearEndLmCrossThreshold(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiEthEthLmThresholdData) validateFarEndLmClearThreshold(formats strfmt.Registry) error {

	if swag.IsZero(m.FarEndLmClearThreshold) { // not required
		return nil
	}

	if m.FarEndLmClearThreshold != nil {
		if err := m.FarEndLmClearThreshold.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("far-end-lm-clear-threshold")
			}
			return err
		}
	}

	return nil
}

func (m *TapiEthEthLmThresholdData) validateFarEndLmCrossThreshold(formats strfmt.Registry) error {

	if swag.IsZero(m.FarEndLmCrossThreshold) { // not required
		return nil
	}

	if m.FarEndLmCrossThreshold != nil {
		if err := m.FarEndLmCrossThreshold.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("far-end-lm-cross-threshold")
			}
			return err
		}
	}

	return nil
}

func (m *TapiEthEthLmThresholdData) validateNearEndLmClearThreshold(formats strfmt.Registry) error {

	if swag.IsZero(m.NearEndLmClearThreshold) { // not required
		return nil
	}

	if m.NearEndLmClearThreshold != nil {
		if err := m.NearEndLmClearThreshold.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("near-end-lm-clear-threshold")
			}
			return err
		}
	}

	return nil
}

func (m *TapiEthEthLmThresholdData) validateNearEndLmCrossThreshold(formats strfmt.Registry) error {

	if swag.IsZero(m.NearEndLmCrossThreshold) { // not required
		return nil
	}

	if m.NearEndLmCrossThreshold != nil {
		if err := m.NearEndLmCrossThreshold.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("near-end-lm-cross-threshold")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiEthEthLmThresholdData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiEthEthLmThresholdData) UnmarshalBinary(b []byte) error {
	var res TapiEthEthLmThresholdData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
