// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiOduOduTerminationAndClientAdaptationPac tapi odu odu termination and client adaptation pac
// swagger:model tapi.odu.OduTerminationAndClientAdaptationPac
type TapiOduOduTerminationAndClientAdaptationPac struct {

	// This attribute is applicable when the ODU CTP object instance represents a lower order ODU CTP Sink at the client layer of the ODUP/ODU[i]j or ODUP/ODUj-21 adaptation function.
	//                     This attribute is a 2-digit Hex code that indicates the new accepted payload type.
	//                     Valid values are defined in Table 15-8 of ITU-T Recommendation G.709 with one additional value UN_INTERPRETABLE.
	AcceptedPayloadType *TapiOduOduPayloadType `json:"accepted-payload-type,omitempty"`

	// This attribute is applicable when the ODU CTP object instance represents a lower order ODU CTP Source at the client layer of the ODUP/ODUj-21 adaptation function. The value of true of this attribute configures that the adaptation source function shall fall back to the payload type PT=20 if the conditions specified in 14.3.10.1/G.798 are satisfied.
	AutoPayloadType *bool `json:"auto-payload-type,omitempty"`

	// This attribute configures the type of the client CTP of the server ODU TTP.
	ConfiguredClientType string `json:"configured-client-type,omitempty"`

	// This attributes indicates the configured mapping type.
	ConfiguredMappingType TapiOduMappingType `json:"configured-mapping-type,omitempty"`

	// This attribute is applicable for ODU2 and ODU3 CTP only. It indicates the slot size of the ODU CTP.
	OpuTributarySlotSize TapiOduOduSlotSize `json:"opu-tributary-slot-size,omitempty"`
}

// Validate validates this tapi odu odu termination and client adaptation pac
func (m *TapiOduOduTerminationAndClientAdaptationPac) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAcceptedPayloadType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateConfiguredMappingType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOpuTributarySlotSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiOduOduTerminationAndClientAdaptationPac) validateAcceptedPayloadType(formats strfmt.Registry) error {

	if swag.IsZero(m.AcceptedPayloadType) { // not required
		return nil
	}

	if m.AcceptedPayloadType != nil {
		if err := m.AcceptedPayloadType.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("accepted-payload-type")
			}
			return err
		}
	}

	return nil
}

func (m *TapiOduOduTerminationAndClientAdaptationPac) validateConfiguredMappingType(formats strfmt.Registry) error {

	if swag.IsZero(m.ConfiguredMappingType) { // not required
		return nil
	}

	if err := m.ConfiguredMappingType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("configured-mapping-type")
		}
		return err
	}

	return nil
}

func (m *TapiOduOduTerminationAndClientAdaptationPac) validateOpuTributarySlotSize(formats strfmt.Registry) error {

	if swag.IsZero(m.OpuTributarySlotSize) { // not required
		return nil
	}

	if err := m.OpuTributarySlotSize.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("opu-tributary-slot-size")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiOduOduTerminationAndClientAdaptationPac) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiOduOduTerminationAndClientAdaptationPac) UnmarshalBinary(b []byte) error {
	var res TapiOduOduTerminationAndClientAdaptationPac
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
