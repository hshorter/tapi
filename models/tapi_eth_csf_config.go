// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// TapiEthCsfConfig tapi eth csf config
// swagger:model tapi.eth.CsfConfig
type TapiEthCsfConfig string

const (

	// TapiEthCsfConfigDISABLED captures enum value "DISABLED"
	TapiEthCsfConfigDISABLED TapiEthCsfConfig = "DISABLED"

	// TapiEthCsfConfigENABLED captures enum value "ENABLED"
	TapiEthCsfConfigENABLED TapiEthCsfConfig = "ENABLED"

	// TapiEthCsfConfigENABLEDWITHRDIFDI captures enum value "ENABLED_WITH_RDI_FDI"
	TapiEthCsfConfigENABLEDWITHRDIFDI TapiEthCsfConfig = "ENABLED_WITH_RDI_FDI"

	// TapiEthCsfConfigENABLEDWITHRDIFDIDCI captures enum value "ENABLED_WITH_RDI_FDI_DCI"
	TapiEthCsfConfigENABLEDWITHRDIFDIDCI TapiEthCsfConfig = "ENABLED_WITH_RDI_FDI_DCI"

	// TapiEthCsfConfigENABLEDWITHDCI captures enum value "ENABLED_WITH_DCI"
	TapiEthCsfConfigENABLEDWITHDCI TapiEthCsfConfig = "ENABLED_WITH_DCI"
)

// for schema
var tapiEthCsfConfigEnum []interface{}

func init() {
	var res []TapiEthCsfConfig
	if err := json.Unmarshal([]byte(`["DISABLED","ENABLED","ENABLED_WITH_RDI_FDI","ENABLED_WITH_RDI_FDI_DCI","ENABLED_WITH_DCI"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tapiEthCsfConfigEnum = append(tapiEthCsfConfigEnum, v)
	}
}

func (m TapiEthCsfConfig) validateTapiEthCsfConfigEnum(path, location string, value TapiEthCsfConfig) error {
	if err := validate.Enum(path, location, value, tapiEthCsfConfigEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this tapi eth csf config
func (m TapiEthCsfConfig) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTapiEthCsfConfigEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
