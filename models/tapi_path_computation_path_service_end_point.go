// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiPathComputationPathServiceEndPoint tapi path computation path service end point
// swagger:model tapi.path.computation.PathServiceEndPoint
type TapiPathComputationPathServiceEndPoint struct {
	TapiCommonLocalClass

	// none
	Capacity *TapiCommonCapacity `json:"capacity,omitempty"`

	// The orientation of defined flow at the EndPoint.
	Direction TapiCommonPortDirection `json:"direction,omitempty"`

	// none
	LayerProtocolName TapiCommonLayerProtocolName `json:"layer-protocol-name,omitempty"`

	// none
	LayerProtocolQualifier string `json:"layer-protocol-qualifier,omitempty"`

	// Each EP of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root)  in the context of the FC with respect to the FC function.
	Role TapiCommonPortRole `json:"role,omitempty"`

	// none
	ServiceInterfacePoint *TapiCommonServiceInterfacePointRef `json:"service-interface-point,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *TapiPathComputationPathServiceEndPoint) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 TapiCommonLocalClass
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.TapiCommonLocalClass = aO0

	// AO1
	var dataAO1 struct {
		Capacity *TapiCommonCapacity `json:"capacity,omitempty"`

		Direction TapiCommonPortDirection `json:"direction,omitempty"`

		LayerProtocolName TapiCommonLayerProtocolName `json:"layer-protocol-name,omitempty"`

		LayerProtocolQualifier string `json:"layer-protocol-qualifier,omitempty"`

		Role TapiCommonPortRole `json:"role,omitempty"`

		ServiceInterfacePoint *TapiCommonServiceInterfacePointRef `json:"service-interface-point,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.Capacity = dataAO1.Capacity

	m.Direction = dataAO1.Direction

	m.LayerProtocolName = dataAO1.LayerProtocolName

	m.LayerProtocolQualifier = dataAO1.LayerProtocolQualifier

	m.Role = dataAO1.Role

	m.ServiceInterfacePoint = dataAO1.ServiceInterfacePoint

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m TapiPathComputationPathServiceEndPoint) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.TapiCommonLocalClass)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	var dataAO1 struct {
		Capacity *TapiCommonCapacity `json:"capacity,omitempty"`

		Direction TapiCommonPortDirection `json:"direction,omitempty"`

		LayerProtocolName TapiCommonLayerProtocolName `json:"layer-protocol-name,omitempty"`

		LayerProtocolQualifier string `json:"layer-protocol-qualifier,omitempty"`

		Role TapiCommonPortRole `json:"role,omitempty"`

		ServiceInterfacePoint *TapiCommonServiceInterfacePointRef `json:"service-interface-point,omitempty"`
	}

	dataAO1.Capacity = m.Capacity

	dataAO1.Direction = m.Direction

	dataAO1.LayerProtocolName = m.LayerProtocolName

	dataAO1.LayerProtocolQualifier = m.LayerProtocolQualifier

	dataAO1.Role = m.Role

	dataAO1.ServiceInterfacePoint = m.ServiceInterfacePoint

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this tapi path computation path service end point
func (m *TapiPathComputationPathServiceEndPoint) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with TapiCommonLocalClass
	if err := m.TapiCommonLocalClass.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCapacity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDirection(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLayerProtocolName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServiceInterfacePoint(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiPathComputationPathServiceEndPoint) validateCapacity(formats strfmt.Registry) error {

	if swag.IsZero(m.Capacity) { // not required
		return nil
	}

	if m.Capacity != nil {
		if err := m.Capacity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("capacity")
			}
			return err
		}
	}

	return nil
}

func (m *TapiPathComputationPathServiceEndPoint) validateDirection(formats strfmt.Registry) error {

	if swag.IsZero(m.Direction) { // not required
		return nil
	}

	if err := m.Direction.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("direction")
		}
		return err
	}

	return nil
}

func (m *TapiPathComputationPathServiceEndPoint) validateLayerProtocolName(formats strfmt.Registry) error {

	if swag.IsZero(m.LayerProtocolName) { // not required
		return nil
	}

	if err := m.LayerProtocolName.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("layer-protocol-name")
		}
		return err
	}

	return nil
}

func (m *TapiPathComputationPathServiceEndPoint) validateRole(formats strfmt.Registry) error {

	if swag.IsZero(m.Role) { // not required
		return nil
	}

	if err := m.Role.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("role")
		}
		return err
	}

	return nil
}

func (m *TapiPathComputationPathServiceEndPoint) validateServiceInterfacePoint(formats strfmt.Registry) error {

	if swag.IsZero(m.ServiceInterfacePoint) { // not required
		return nil
	}

	if m.ServiceInterfacePoint != nil {
		if err := m.ServiceInterfacePoint.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("service-interface-point")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiPathComputationPathServiceEndPoint) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiPathComputationPathServiceEndPoint) UnmarshalBinary(b []byte) error {
	var res TapiPathComputationPathServiceEndPoint
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
