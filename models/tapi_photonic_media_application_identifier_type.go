// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// TapiPhotonicMediaApplicationIdentifierType tapi photonic media application identifier type
// swagger:model tapi.photonic.media.ApplicationIdentifierType
type TapiPhotonicMediaApplicationIdentifierType string

const (

	// TapiPhotonicMediaApplicationIdentifierTypePROPRIETARY captures enum value "PROPRIETARY"
	TapiPhotonicMediaApplicationIdentifierTypePROPRIETARY TapiPhotonicMediaApplicationIdentifierType = "PROPRIETARY"

	// TapiPhotonicMediaApplicationIdentifierTypeITUTG9591 captures enum value "ITUT_G959_1"
	TapiPhotonicMediaApplicationIdentifierTypeITUTG9591 TapiPhotonicMediaApplicationIdentifierType = "ITUT_G959_1"

	// TapiPhotonicMediaApplicationIdentifierTypeITUTG6981 captures enum value "ITUT_G698_1"
	TapiPhotonicMediaApplicationIdentifierTypeITUTG6981 TapiPhotonicMediaApplicationIdentifierType = "ITUT_G698_1"

	// TapiPhotonicMediaApplicationIdentifierTypeITUTG6982 captures enum value "ITUT_G698_2"
	TapiPhotonicMediaApplicationIdentifierTypeITUTG6982 TapiPhotonicMediaApplicationIdentifierType = "ITUT_G698_2"

	// TapiPhotonicMediaApplicationIdentifierTypeITUTG6961 captures enum value "ITUT_G696_1"
	TapiPhotonicMediaApplicationIdentifierTypeITUTG6961 TapiPhotonicMediaApplicationIdentifierType = "ITUT_G696_1"

	// TapiPhotonicMediaApplicationIdentifierTypeITUTG695 captures enum value "ITUT_G695"
	TapiPhotonicMediaApplicationIdentifierTypeITUTG695 TapiPhotonicMediaApplicationIdentifierType = "ITUT_G695"
)

// for schema
var tapiPhotonicMediaApplicationIdentifierTypeEnum []interface{}

func init() {
	var res []TapiPhotonicMediaApplicationIdentifierType
	if err := json.Unmarshal([]byte(`["PROPRIETARY","ITUT_G959_1","ITUT_G698_1","ITUT_G698_2","ITUT_G696_1","ITUT_G695"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tapiPhotonicMediaApplicationIdentifierTypeEnum = append(tapiPhotonicMediaApplicationIdentifierTypeEnum, v)
	}
}

func (m TapiPhotonicMediaApplicationIdentifierType) validateTapiPhotonicMediaApplicationIdentifierTypeEnum(path, location string, value TapiPhotonicMediaApplicationIdentifierType) error {
	if err := validate.Enum(path, location, value, tapiPhotonicMediaApplicationIdentifierTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this tapi photonic media application identifier type
func (m TapiPhotonicMediaApplicationIdentifierType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTapiPhotonicMediaApplicationIdentifierTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
