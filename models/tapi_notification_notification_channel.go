// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiNotificationNotificationChannel tapi notification notification channel
// swagger:model tapi.notification.NotificationChannel
type TapiNotificationNotificationChannel struct {
	TapiCommonLocalClass

	// The sequence number of the next notification that will be published on the channel
	NextSequenceNo int32 `json:"next-sequence-no,omitempty"`

	// The address/location/URI of the channel/stream to which the subscribed notifications are published.
	//                     This specifics of this is typically dependent on the implementation protocol & mechanism and hence is typed as a string.
	StreamAddress string `json:"stream-address,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *TapiNotificationNotificationChannel) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 TapiCommonLocalClass
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.TapiCommonLocalClass = aO0

	// AO1
	var dataAO1 struct {
		NextSequenceNo int32 `json:"next-sequence-no,omitempty"`

		StreamAddress string `json:"stream-address,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.NextSequenceNo = dataAO1.NextSequenceNo

	m.StreamAddress = dataAO1.StreamAddress

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m TapiNotificationNotificationChannel) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.TapiCommonLocalClass)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	var dataAO1 struct {
		NextSequenceNo int32 `json:"next-sequence-no,omitempty"`

		StreamAddress string `json:"stream-address,omitempty"`
	}

	dataAO1.NextSequenceNo = m.NextSequenceNo

	dataAO1.StreamAddress = m.StreamAddress

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this tapi notification notification channel
func (m *TapiNotificationNotificationChannel) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with TapiCommonLocalClass
	if err := m.TapiCommonLocalClass.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *TapiNotificationNotificationChannel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiNotificationNotificationChannel) UnmarshalBinary(b []byte) error {
	var res TapiNotificationNotificationChannel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
