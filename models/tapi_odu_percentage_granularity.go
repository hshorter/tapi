// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// TapiOduPercentageGranularity tapi odu percentage granularity
// swagger:model tapi.odu.PercentageGranularity
type TapiOduPercentageGranularity string

const (

	// TapiOduPercentageGranularityONES captures enum value "ONES"
	TapiOduPercentageGranularityONES TapiOduPercentageGranularity = "ONES"

	// TapiOduPercentageGranularityONETENTHS captures enum value "ONE_TENTHS"
	TapiOduPercentageGranularityONETENTHS TapiOduPercentageGranularity = "ONE_TENTHS"

	// TapiOduPercentageGranularityONEHUNDREDTHS captures enum value "ONE_HUNDREDTHS"
	TapiOduPercentageGranularityONEHUNDREDTHS TapiOduPercentageGranularity = "ONE_HUNDREDTHS"

	// TapiOduPercentageGranularityONETHOUSANDTHS captures enum value "ONE_THOUSANDTHS"
	TapiOduPercentageGranularityONETHOUSANDTHS TapiOduPercentageGranularity = "ONE_THOUSANDTHS"
)

// for schema
var tapiOduPercentageGranularityEnum []interface{}

func init() {
	var res []TapiOduPercentageGranularity
	if err := json.Unmarshal([]byte(`["ONES","ONE_TENTHS","ONE_HUNDREDTHS","ONE_THOUSANDTHS"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tapiOduPercentageGranularityEnum = append(tapiOduPercentageGranularityEnum, v)
	}
}

func (m TapiOduPercentageGranularity) validateTapiOduPercentageGranularityEnum(path, location string, value TapiOduPercentageGranularity) error {
	if err := validate.Enum(path, location, value, tapiOduPercentageGranularityEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this tapi odu percentage granularity
func (m TapiOduPercentageGranularity) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTapiOduPercentageGranularityEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
