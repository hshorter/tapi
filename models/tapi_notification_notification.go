// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TapiNotificationNotification tapi notification notification
// swagger:model tapi.notification.Notification
type TapiNotificationNotification struct {
	TapiCommonGlobalClass

	// none
	AdditionalInfo []*TapiCommonNameAndValue `json:"additional-info"`

	// none
	AdditionalText string `json:"additional-text,omitempty"`

	// none
	AlarmInfo *TapiNotificationAlarmInfo `json:"alarm-info,omitempty"`

	// none
	ChangedAttributes []*TapiNotificationNameAndValueChange `json:"changed-attributes"`

	// none
	EventTimeStamp string `json:"event-time-stamp,omitempty"`

	// none
	LayerProtocolName TapiCommonLayerProtocolName `json:"layer-protocol-name,omitempty"`

	// none
	NotificationType TapiNotificationNotificationType `json:"notification-type,omitempty"`

	// A monotonous increasing sequence number associated with the notification.
	//                     The exact semantics of how this sequence number is assigned (per channel or subscription or source or system) is left undefined.
	SequenceNumber int32 `json:"sequence-number,omitempty"`

	// none
	SourceIndicator TapiNotificationSourceIndicator `json:"source-indicator,omitempty"`

	// none
	TargetObjectIdentifier string `json:"target-object-identifier,omitempty"`

	// none
	TargetObjectName []*TapiCommonNameAndValue `json:"target-object-name"`

	// none
	TargetObjectType TapiNotificationObjectType `json:"target-object-type,omitempty"`

	// none
	TcaInfo *TapiNotificationTcaInfo `json:"tca-info,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *TapiNotificationNotification) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 TapiCommonGlobalClass
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.TapiCommonGlobalClass = aO0

	// AO1
	var dataAO1 struct {
		AdditionalInfo []*TapiCommonNameAndValue `json:"additional-info"`

		AdditionalText string `json:"additional-text,omitempty"`

		AlarmInfo *TapiNotificationAlarmInfo `json:"alarm-info,omitempty"`

		ChangedAttributes []*TapiNotificationNameAndValueChange `json:"changed-attributes"`

		EventTimeStamp string `json:"event-time-stamp,omitempty"`

		LayerProtocolName TapiCommonLayerProtocolName `json:"layer-protocol-name,omitempty"`

		NotificationType TapiNotificationNotificationType `json:"notification-type,omitempty"`

		SequenceNumber int32 `json:"sequence-number,omitempty"`

		SourceIndicator TapiNotificationSourceIndicator `json:"source-indicator,omitempty"`

		TargetObjectIdentifier string `json:"target-object-identifier,omitempty"`

		TargetObjectName []*TapiCommonNameAndValue `json:"target-object-name"`

		TargetObjectType TapiNotificationObjectType `json:"target-object-type,omitempty"`

		TcaInfo *TapiNotificationTcaInfo `json:"tca-info,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.AdditionalInfo = dataAO1.AdditionalInfo

	m.AdditionalText = dataAO1.AdditionalText

	m.AlarmInfo = dataAO1.AlarmInfo

	m.ChangedAttributes = dataAO1.ChangedAttributes

	m.EventTimeStamp = dataAO1.EventTimeStamp

	m.LayerProtocolName = dataAO1.LayerProtocolName

	m.NotificationType = dataAO1.NotificationType

	m.SequenceNumber = dataAO1.SequenceNumber

	m.SourceIndicator = dataAO1.SourceIndicator

	m.TargetObjectIdentifier = dataAO1.TargetObjectIdentifier

	m.TargetObjectName = dataAO1.TargetObjectName

	m.TargetObjectType = dataAO1.TargetObjectType

	m.TcaInfo = dataAO1.TcaInfo

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m TapiNotificationNotification) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.TapiCommonGlobalClass)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	var dataAO1 struct {
		AdditionalInfo []*TapiCommonNameAndValue `json:"additional-info"`

		AdditionalText string `json:"additional-text,omitempty"`

		AlarmInfo *TapiNotificationAlarmInfo `json:"alarm-info,omitempty"`

		ChangedAttributes []*TapiNotificationNameAndValueChange `json:"changed-attributes"`

		EventTimeStamp string `json:"event-time-stamp,omitempty"`

		LayerProtocolName TapiCommonLayerProtocolName `json:"layer-protocol-name,omitempty"`

		NotificationType TapiNotificationNotificationType `json:"notification-type,omitempty"`

		SequenceNumber int32 `json:"sequence-number,omitempty"`

		SourceIndicator TapiNotificationSourceIndicator `json:"source-indicator,omitempty"`

		TargetObjectIdentifier string `json:"target-object-identifier,omitempty"`

		TargetObjectName []*TapiCommonNameAndValue `json:"target-object-name"`

		TargetObjectType TapiNotificationObjectType `json:"target-object-type,omitempty"`

		TcaInfo *TapiNotificationTcaInfo `json:"tca-info,omitempty"`
	}

	dataAO1.AdditionalInfo = m.AdditionalInfo

	dataAO1.AdditionalText = m.AdditionalText

	dataAO1.AlarmInfo = m.AlarmInfo

	dataAO1.ChangedAttributes = m.ChangedAttributes

	dataAO1.EventTimeStamp = m.EventTimeStamp

	dataAO1.LayerProtocolName = m.LayerProtocolName

	dataAO1.NotificationType = m.NotificationType

	dataAO1.SequenceNumber = m.SequenceNumber

	dataAO1.SourceIndicator = m.SourceIndicator

	dataAO1.TargetObjectIdentifier = m.TargetObjectIdentifier

	dataAO1.TargetObjectName = m.TargetObjectName

	dataAO1.TargetObjectType = m.TargetObjectType

	dataAO1.TcaInfo = m.TcaInfo

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this tapi notification notification
func (m *TapiNotificationNotification) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with TapiCommonGlobalClass
	if err := m.TapiCommonGlobalClass.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAdditionalInfo(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAlarmInfo(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateChangedAttributes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLayerProtocolName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNotificationType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSourceIndicator(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTargetObjectName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTargetObjectType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTcaInfo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TapiNotificationNotification) validateAdditionalInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.AdditionalInfo) { // not required
		return nil
	}

	for i := 0; i < len(m.AdditionalInfo); i++ {
		if swag.IsZero(m.AdditionalInfo[i]) { // not required
			continue
		}

		if m.AdditionalInfo[i] != nil {
			if err := m.AdditionalInfo[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("additional-info" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *TapiNotificationNotification) validateAlarmInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.AlarmInfo) { // not required
		return nil
	}

	if m.AlarmInfo != nil {
		if err := m.AlarmInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("alarm-info")
			}
			return err
		}
	}

	return nil
}

func (m *TapiNotificationNotification) validateChangedAttributes(formats strfmt.Registry) error {

	if swag.IsZero(m.ChangedAttributes) { // not required
		return nil
	}

	for i := 0; i < len(m.ChangedAttributes); i++ {
		if swag.IsZero(m.ChangedAttributes[i]) { // not required
			continue
		}

		if m.ChangedAttributes[i] != nil {
			if err := m.ChangedAttributes[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("changed-attributes" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *TapiNotificationNotification) validateLayerProtocolName(formats strfmt.Registry) error {

	if swag.IsZero(m.LayerProtocolName) { // not required
		return nil
	}

	if err := m.LayerProtocolName.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("layer-protocol-name")
		}
		return err
	}

	return nil
}

func (m *TapiNotificationNotification) validateNotificationType(formats strfmt.Registry) error {

	if swag.IsZero(m.NotificationType) { // not required
		return nil
	}

	if err := m.NotificationType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("notification-type")
		}
		return err
	}

	return nil
}

func (m *TapiNotificationNotification) validateSourceIndicator(formats strfmt.Registry) error {

	if swag.IsZero(m.SourceIndicator) { // not required
		return nil
	}

	if err := m.SourceIndicator.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("source-indicator")
		}
		return err
	}

	return nil
}

func (m *TapiNotificationNotification) validateTargetObjectName(formats strfmt.Registry) error {

	if swag.IsZero(m.TargetObjectName) { // not required
		return nil
	}

	for i := 0; i < len(m.TargetObjectName); i++ {
		if swag.IsZero(m.TargetObjectName[i]) { // not required
			continue
		}

		if m.TargetObjectName[i] != nil {
			if err := m.TargetObjectName[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("target-object-name" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *TapiNotificationNotification) validateTargetObjectType(formats strfmt.Registry) error {

	if swag.IsZero(m.TargetObjectType) { // not required
		return nil
	}

	if err := m.TargetObjectType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("target-object-type")
		}
		return err
	}

	return nil
}

func (m *TapiNotificationNotification) validateTcaInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.TcaInfo) { // not required
		return nil
	}

	if m.TcaInfo != nil {
		if err := m.TcaInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tca-info")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TapiNotificationNotification) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TapiNotificationNotification) UnmarshalBinary(b []byte) error {
	var res TapiNotificationNotification
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
