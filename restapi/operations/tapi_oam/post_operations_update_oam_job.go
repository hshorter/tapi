// Code generated by go-swagger; DO NOT EDIT.

package tapi_oam

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PostOperationsUpdateOamJobHandlerFunc turns a function with the right signature into a post operations update oam job handler
type PostOperationsUpdateOamJobHandlerFunc func(PostOperationsUpdateOamJobParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostOperationsUpdateOamJobHandlerFunc) Handle(params PostOperationsUpdateOamJobParams) middleware.Responder {
	return fn(params)
}

// PostOperationsUpdateOamJobHandler interface for that can handle valid post operations update oam job params
type PostOperationsUpdateOamJobHandler interface {
	Handle(PostOperationsUpdateOamJobParams) middleware.Responder
}

// NewPostOperationsUpdateOamJob creates a new http.Handler for the post operations update oam job operation
func NewPostOperationsUpdateOamJob(ctx *middleware.Context, handler PostOperationsUpdateOamJobHandler) *PostOperationsUpdateOamJob {
	return &PostOperationsUpdateOamJob{Context: ctx, Handler: handler}
}

/*PostOperationsUpdateOamJob swagger:route POST /operations/update-oam-job/ tapi-oam postOperationsUpdateOamJob

PostOperationsUpdateOamJob post operations update oam job API

*/
type PostOperationsUpdateOamJob struct {
	Context *middleware.Context
	Handler PostOperationsUpdateOamJobHandler
}

func (o *PostOperationsUpdateOamJob) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPostOperationsUpdateOamJobParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
